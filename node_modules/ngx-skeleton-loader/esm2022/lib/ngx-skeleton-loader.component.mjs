import { Component, Input, isDevMode, ChangeDetectionStrategy, Optional, Inject, } from '@angular/core';
import { NGX_SKELETON_LOADER_CONFIG, } from './ngx-skeleton-loader-config.types';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class NgxSkeletonLoaderComponent {
    constructor(config) {
        this.config = config;
        const { appearance = 'line', animation = 'progress', theme = null, loadingText = 'Loading...', count = 1, ariaLabel = 'loading', } = config || {};
        this.appearance = appearance;
        this.animation = animation;
        this.theme = theme;
        this.loadingText = loadingText;
        this.count = count;
        this.items = [];
        this.ariaLabel = ariaLabel;
    }
    ngOnInit() {
        this.validateInputValues();
    }
    validateInputValues() {
        // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)
        if (!/^\d+$/.test(`${this.count}`)) {
            // Shows error message only in Development
            if (isDevMode()) {
                console.error(`\`NgxSkeletonLoaderComponent\` need to receive 'count' a numeric value. Forcing default to "1".`);
            }
            this.count = 1;
        }
        //Force count to 1 when custom-content is used
        if (this.appearance === 'custom-content') {
            // Shows error message only in Development
            if (isDevMode() && this.count !== 1) {
                console.error(`\`NgxSkeletonLoaderComponent\` enforces elements with "custom-content" appearance as DOM nodes. Forcing "count" to "1".`);
                this.count = 1;
            }
        }
        this.items.length = this.count;
        const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];
        if (allowedAnimations.indexOf(String(this.animation)) === -1) {
            // Shows error message only in Development
            if (isDevMode()) {
                console.error(`\`NgxSkeletonLoaderComponent\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to "progress".`);
            }
            this.animation = 'progress';
        }
        if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {
            // Shows error message only in Development
            if (isDevMode()) {
                console.error(`\`NgxSkeletonLoaderComponent\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to "''".`);
            }
            this.appearance = '';
        }
        if (Boolean(this.config?.theme?.extendsFromRoot) && this.theme !== null) {
            // Shows error message only in Development
            this.theme = { ...this.config.theme, ...this.theme };
        }
    }
    ngOnChanges(changes) {
        // Avoiding multiple calls for the same input in case there's no changes in the fields
        // Checking if the fields that require validation are available and if they were changed
        // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.
        if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {
            return;
        }
        this.validateInputValues();
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: NgxSkeletonLoaderComponent, deps: [{ token: NGX_SKELETON_LOADER_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }
    /** @nocollapse */ static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: NgxSkeletonLoaderComponent, selector: "ngx-skeleton-loader", inputs: { count: "count", loadingText: "loadingText", appearance: "appearance", animation: "animation", ariaLabel: "ariaLabel", theme: "theme" }, usesOnChanges: true, ngImport: i0, template: "<div\n  *ngFor=\"let item of items\"\n  class=\"skeleton-loader\"\n  [attr.aria-label]=\"ariaLabel\"\n  aria-busy=\"true\"\n  aria-valuemin=\"0\"\n  aria-valuemax=\"100\"\n  [attr.aria-valuetext]=\"loadingText\"\n  role=\"progressbar\"\n  tabindex=\"-1\"\n  [ngClass]=\"{\n    'custom-content': appearance === 'custom-content',\n    circle: appearance === 'circle',\n    progress: animation === 'progress',\n    'progress-dark': animation === 'progress-dark',\n    pulse: animation === 'pulse'\n  }\"\n  [ngStyle]=\"theme\"\n>\n  <ng-content *ngIf=\"appearance  === 'custom-content'\"></ng-content>\n</div>\n", styles: [".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\"\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { NgxSkeletonLoaderComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: NgxSkeletonLoaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-skeleton-loader', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n  *ngFor=\"let item of items\"\n  class=\"skeleton-loader\"\n  [attr.aria-label]=\"ariaLabel\"\n  aria-busy=\"true\"\n  aria-valuemin=\"0\"\n  aria-valuemax=\"100\"\n  [attr.aria-valuetext]=\"loadingText\"\n  role=\"progressbar\"\n  tabindex=\"-1\"\n  [ngClass]=\"{\n    'custom-content': appearance === 'custom-content',\n    circle: appearance === 'circle',\n    progress: animation === 'progress',\n    'progress-dark': animation === 'progress-dark',\n    pulse: animation === 'pulse'\n  }\"\n  [ngStyle]=\"theme\"\n>\n  <ng-content *ngIf=\"appearance  === 'custom-content'\"></ng-content>\n</div>\n", styles: [".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\"\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [NGX_SKELETON_LOADER_CONFIG]
                }, {
                    type: Optional
                }] }]; }, propDecorators: { count: [{
                type: Input
            }], loadingText: [{
                type: Input
            }], appearance: [{
                type: Input
            }], animation: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], theme: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNrZWxldG9uLWxvYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc2tlbGV0b24tbG9hZGVyL3NyYy9saWIvbmd4LXNrZWxldG9uLWxvYWRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc2tlbGV0b24tbG9hZGVyL3NyYy9saWIvbmd4LXNrZWxldG9uLWxvYWRlci5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsS0FBSyxFQUNMLFNBQVMsRUFDVCx1QkFBdUIsRUFHdkIsUUFBUSxFQUNSLE1BQU0sR0FDUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBR0wsMEJBQTBCLEdBQzNCLE1BQU0sb0NBQW9DLENBQUM7OztBQUU1QyxNQU1hLDBCQUEwQjtJQXdCckMsWUFBb0UsTUFBZ0M7UUFBaEMsV0FBTSxHQUFOLE1BQU0sQ0FBMEI7UUFDbEcsTUFBTSxFQUNKLFVBQVUsR0FBRyxNQUFNLEVBQ25CLFNBQVMsR0FBRyxVQUFVLEVBQ3RCLEtBQUssR0FBRyxJQUFJLEVBQ1osV0FBVyxHQUFHLFlBQVksRUFDMUIsS0FBSyxHQUFHLENBQUMsRUFDVCxTQUFTLEdBQUcsU0FBUyxHQUN0QixHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUM7UUFFakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDN0IsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRU8sbUJBQW1CO1FBQ3pCLDhGQUE4RjtRQUM5RixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFO1lBQ2xDLDBDQUEwQztZQUMxQyxJQUFJLFNBQVMsRUFBRSxFQUFFO2dCQUNmLE9BQU8sQ0FBQyxLQUFLLENBQ1gsaUdBQWlHLENBQ2xHLENBQUM7YUFDSDtZQUNELElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ2hCO1FBRUQsOENBQThDO1FBQzlDLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxnQkFBZ0IsRUFBRTtZQUN4QywwQ0FBMEM7WUFDMUMsSUFBSSxTQUFTLEVBQUUsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsRUFBRTtnQkFDbkMsT0FBTyxDQUFDLEtBQUssQ0FDWCx5SEFBeUgsQ0FDMUgsQ0FBQztnQkFDRixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUUvQixNQUFNLGlCQUFpQixHQUFHLENBQUMsVUFBVSxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDMUUsSUFBSSxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQzVELDBDQUEwQztZQUMxQyxJQUFJLFNBQVMsRUFBRSxFQUFFO2dCQUNmLE9BQU8sQ0FBQyxLQUFLLENBQ1gsa0VBQWtFLGlCQUFpQixDQUFDLElBQUksQ0FDdEYsSUFBSSxDQUNMLGtDQUFrQyxDQUNwQyxDQUFDO2FBQ0g7WUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQztTQUM3QjtRQUVELElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDcEYsMENBQTBDO1lBQzFDLElBQUksU0FBUyxFQUFFLEVBQUU7Z0JBQ2YsT0FBTyxDQUFDLEtBQUssQ0FDWCw0SUFBNEksQ0FDN0ksQ0FBQzthQUNIO1lBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7U0FDdEI7UUFFRCxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksRUFBRTtZQUN2RSwwQ0FBMEM7WUFDMUMsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDdkQ7SUFDSCxDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLHNGQUFzRjtRQUN0Rix3RkFBd0Y7UUFDeEYsbUdBQW1HO1FBQ25HLElBQ0UsQ0FBQyxPQUFPLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FDdkMsR0FBRyxDQUFDLEVBQUUsQ0FDSixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsS0FBSyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQzdHLEVBQ0Q7WUFDQSxPQUFPO1NBQ1I7UUFFRCxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUM3QixDQUFDO2lJQWxIVSwwQkFBMEIsa0JBd0JqQiwwQkFBMEI7cUhBeEJuQywwQkFBMEIsa09DdkJ2QyxrbUJBcUJBOztTREVhLDBCQUEwQjsyRkFBMUIsMEJBQTBCO2tCQU50QyxTQUFTOytCQUNFLHFCQUFxQixtQkFHZCx1QkFBdUIsQ0FBQyxNQUFNOzswQkEwQmxDLE1BQU07MkJBQUMsMEJBQTBCOzswQkFBRyxRQUFROzRDQW5CekQsS0FBSztzQkFESixLQUFLO2dCQUlOLFdBQVc7c0JBRFYsS0FBSztnQkFJTixVQUFVO3NCQURULEtBQUs7Z0JBSU4sU0FBUztzQkFEUixLQUFLO2dCQUlOLFNBQVM7c0JBRFIsS0FBSztnQkFJTixLQUFLO3NCQURKLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCxcbiAgSW5wdXQsXG4gIGlzRGV2TW9kZSxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIE9uQ2hhbmdlcyxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgT3B0aW9uYWwsXG4gIEluamVjdCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBOZ3hTa2VsZXRvbkxvYWRlckNvbmZpZyxcbiAgTmd4U2tlbGV0b25Mb2FkZXJDb25maWdUaGVtZSxcbiAgTkdYX1NLRUxFVE9OX0xPQURFUl9DT05GSUcsXG59IGZyb20gJy4vbmd4LXNrZWxldG9uLWxvYWRlci1jb25maWcudHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtc2tlbGV0b24tbG9hZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25neC1za2VsZXRvbi1sb2FkZXIuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25neC1za2VsZXRvbi1sb2FkZXIuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTmd4U2tlbGV0b25Mb2FkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9jb3VudDogbnVtYmVyIHwgc3RyaW5nO1xuICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfYW5pbWF0aW9uOiBib29sZWFuIHwgc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIGNvdW50OiBOZ3hTa2VsZXRvbkxvYWRlckNvbmZpZ1snY291bnQnXTtcblxuICBASW5wdXQoKVxuICBsb2FkaW5nVGV4dDogTmd4U2tlbGV0b25Mb2FkZXJDb25maWdbJ2xvYWRpbmdUZXh0J107XG5cbiAgQElucHV0KClcbiAgYXBwZWFyYW5jZTogTmd4U2tlbGV0b25Mb2FkZXJDb25maWdbJ2FwcGVhcmFuY2UnXTtcblxuICBASW5wdXQoKVxuICBhbmltYXRpb246IE5neFNrZWxldG9uTG9hZGVyQ29uZmlnWydhbmltYXRpb24nXTtcblxuICBASW5wdXQoKVxuICBhcmlhTGFiZWw6IE5neFNrZWxldG9uTG9hZGVyQ29uZmlnWydhcmlhTGFiZWwnXTtcblxuICBASW5wdXQoKVxuICB0aGVtZTogTmd4U2tlbGV0b25Mb2FkZXJDb25maWdUaGVtZTtcblxuICBpdGVtczogQXJyYXk8YW55PjtcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KE5HWF9TS0VMRVRPTl9MT0FERVJfQ09ORklHKSBAT3B0aW9uYWwoKSBwcml2YXRlIGNvbmZpZz86IE5neFNrZWxldG9uTG9hZGVyQ29uZmlnKSB7XG4gICAgY29uc3Qge1xuICAgICAgYXBwZWFyYW5jZSA9ICdsaW5lJyxcbiAgICAgIGFuaW1hdGlvbiA9ICdwcm9ncmVzcycsXG4gICAgICB0aGVtZSA9IG51bGwsXG4gICAgICBsb2FkaW5nVGV4dCA9ICdMb2FkaW5nLi4uJyxcbiAgICAgIGNvdW50ID0gMSxcbiAgICAgIGFyaWFMYWJlbCA9ICdsb2FkaW5nJyxcbiAgICB9ID0gY29uZmlnIHx8IHt9O1xuXG4gICAgdGhpcy5hcHBlYXJhbmNlID0gYXBwZWFyYW5jZTtcbiAgICB0aGlzLmFuaW1hdGlvbiA9IGFuaW1hdGlvbjtcbiAgICB0aGlzLnRoZW1lID0gdGhlbWU7XG4gICAgdGhpcy5sb2FkaW5nVGV4dCA9IGxvYWRpbmdUZXh0O1xuICAgIHRoaXMuY291bnQgPSBjb3VudDtcbiAgICB0aGlzLml0ZW1zID0gW107XG4gICAgdGhpcy5hcmlhTGFiZWwgPSBhcmlhTGFiZWw7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnZhbGlkYXRlSW5wdXRWYWx1ZXMoKTtcbiAgfVxuXG4gIHByaXZhdGUgdmFsaWRhdGVJbnB1dFZhbHVlcygpIHtcbiAgICAvLyBDaGVja2luZyBpZiBpdCdzIHJlY2VpdmluZyBhIG51bWVyaWMgdmFsdWUgKHN0cmluZyBoYXZpbmcgT05MWSBudW1iZXJzIG9yIGlmIGl0J3MgYSBudW1iZXIpXG4gICAgaWYgKCEvXlxcZCskLy50ZXN0KGAke3RoaXMuY291bnR9YCkpIHtcbiAgICAgIC8vIFNob3dzIGVycm9yIG1lc3NhZ2Ugb25seSBpbiBEZXZlbG9wbWVudFxuICAgICAgaWYgKGlzRGV2TW9kZSgpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgYFxcYE5neFNrZWxldG9uTG9hZGVyQ29tcG9uZW50XFxgIG5lZWQgdG8gcmVjZWl2ZSAnY291bnQnIGEgbnVtZXJpYyB2YWx1ZS4gRm9yY2luZyBkZWZhdWx0IHRvIFwiMVwiLmAsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICB0aGlzLmNvdW50ID0gMTtcbiAgICB9XG5cbiAgICAvL0ZvcmNlIGNvdW50IHRvIDEgd2hlbiBjdXN0b20tY29udGVudCBpcyB1c2VkXG4gICAgaWYgKHRoaXMuYXBwZWFyYW5jZSA9PT0gJ2N1c3RvbS1jb250ZW50Jykge1xuICAgICAgLy8gU2hvd3MgZXJyb3IgbWVzc2FnZSBvbmx5IGluIERldmVsb3BtZW50XG4gICAgICBpZiAoaXNEZXZNb2RlKCkgJiYgdGhpcy5jb3VudCAhPT0gMSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgIGBcXGBOZ3hTa2VsZXRvbkxvYWRlckNvbXBvbmVudFxcYCBlbmZvcmNlcyBlbGVtZW50cyB3aXRoIFwiY3VzdG9tLWNvbnRlbnRcIiBhcHBlYXJhbmNlIGFzIERPTSBub2Rlcy4gRm9yY2luZyBcImNvdW50XCIgdG8gXCIxXCIuYCxcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5jb3VudCA9IDE7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuaXRlbXMubGVuZ3RoID0gdGhpcy5jb3VudDtcblxuICAgIGNvbnN0IGFsbG93ZWRBbmltYXRpb25zID0gWydwcm9ncmVzcycsICdwcm9ncmVzcy1kYXJrJywgJ3B1bHNlJywgJ2ZhbHNlJ107XG4gICAgaWYgKGFsbG93ZWRBbmltYXRpb25zLmluZGV4T2YoU3RyaW5nKHRoaXMuYW5pbWF0aW9uKSkgPT09IC0xKSB7XG4gICAgICAvLyBTaG93cyBlcnJvciBtZXNzYWdlIG9ubHkgaW4gRGV2ZWxvcG1lbnRcbiAgICAgIGlmIChpc0Rldk1vZGUoKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgIGBcXGBOZ3hTa2VsZXRvbkxvYWRlckNvbXBvbmVudFxcYCBuZWVkIHRvIHJlY2VpdmUgJ2FuaW1hdGlvbicgYXM6ICR7YWxsb3dlZEFuaW1hdGlvbnMuam9pbihcbiAgICAgICAgICAgICcsICcsXG4gICAgICAgICAgKX0uIEZvcmNpbmcgZGVmYXVsdCB0byBcInByb2dyZXNzXCIuYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuYW5pbWF0aW9uID0gJ3Byb2dyZXNzJztcbiAgICB9XG5cbiAgICBpZiAoWydjaXJjbGUnLCAnbGluZScsICdjdXN0b20tY29udGVudCcsICcnXS5pbmRleE9mKFN0cmluZyh0aGlzLmFwcGVhcmFuY2UpKSA9PT0gLTEpIHtcbiAgICAgIC8vIFNob3dzIGVycm9yIG1lc3NhZ2Ugb25seSBpbiBEZXZlbG9wbWVudFxuICAgICAgaWYgKGlzRGV2TW9kZSgpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgYFxcYE5neFNrZWxldG9uTG9hZGVyQ29tcG9uZW50XFxgIG5lZWQgdG8gcmVjZWl2ZSAnYXBwZWFyYW5jZScgYXM6IGNpcmNsZSBvciBsaW5lIG9yIGN1c3RvbS1jb250ZW50IG9yIGVtcHR5IHN0cmluZy4gRm9yY2luZyBkZWZhdWx0IHRvIFwiJydcIi5gLFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgdGhpcy5hcHBlYXJhbmNlID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKEJvb2xlYW4odGhpcy5jb25maWc/LnRoZW1lPy5leHRlbmRzRnJvbVJvb3QpICYmIHRoaXMudGhlbWUgIT09IG51bGwpIHtcbiAgICAgIC8vIFNob3dzIGVycm9yIG1lc3NhZ2Ugb25seSBpbiBEZXZlbG9wbWVudFxuICAgICAgdGhpcy50aGVtZSA9IHsgLi4udGhpcy5jb25maWchLnRoZW1lLCAuLi50aGlzLnRoZW1lIH07XG4gICAgfVxuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIC8vIEF2b2lkaW5nIG11bHRpcGxlIGNhbGxzIGZvciB0aGUgc2FtZSBpbnB1dCBpbiBjYXNlIHRoZXJlJ3Mgbm8gY2hhbmdlcyBpbiB0aGUgZmllbGRzXG4gICAgLy8gQ2hlY2tpbmcgaWYgdGhlIGZpZWxkcyB0aGF0IHJlcXVpcmUgdmFsaWRhdGlvbiBhcmUgYXZhaWxhYmxlIGFuZCBpZiB0aGV5IHdlcmUgY2hhbmdlZFxuICAgIC8vIEluIGNhc2Ugd2VyZSBub3QgY2hhbmdlZCwgd2Ugc3RvcCB0aGUgZnVuY3Rpb24uIE90aGVyd2lzZSwgYHZhbGlkYXRlSW5wdXRWYWx1ZXNgIHdpbGwgYmUgY2FsbGVkLlxuICAgIGlmIChcbiAgICAgIFsnY291bnQnLCAnYW5pbWF0aW9uJywgJ2FwcGVhcmFuY2UnXS5maW5kKFxuICAgICAgICBrZXkgPT5cbiAgICAgICAgICBjaGFuZ2VzW2tleV0gJiYgKGNoYW5nZXNba2V5XS5pc0ZpcnN0Q2hhbmdlKCkgfHwgY2hhbmdlc1trZXldLnByZXZpb3VzVmFsdWUgPT09IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWUpLFxuICAgICAgKVxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMudmFsaWRhdGVJbnB1dFZhbHVlcygpO1xuICB9XG59XG4iLCI8ZGl2XG4gICpuZ0Zvcj1cImxldCBpdGVtIG9mIGl0ZW1zXCJcbiAgY2xhc3M9XCJza2VsZXRvbi1sb2FkZXJcIlxuICBbYXR0ci5hcmlhLWxhYmVsXT1cImFyaWFMYWJlbFwiXG4gIGFyaWEtYnVzeT1cInRydWVcIlxuICBhcmlhLXZhbHVlbWluPVwiMFwiXG4gIGFyaWEtdmFsdWVtYXg9XCIxMDBcIlxuICBbYXR0ci5hcmlhLXZhbHVldGV4dF09XCJsb2FkaW5nVGV4dFwiXG4gIHJvbGU9XCJwcm9ncmVzc2JhclwiXG4gIHRhYmluZGV4PVwiLTFcIlxuICBbbmdDbGFzc109XCJ7XG4gICAgJ2N1c3RvbS1jb250ZW50JzogYXBwZWFyYW5jZSA9PT0gJ2N1c3RvbS1jb250ZW50JyxcbiAgICBjaXJjbGU6IGFwcGVhcmFuY2UgPT09ICdjaXJjbGUnLFxuICAgIHByb2dyZXNzOiBhbmltYXRpb24gPT09ICdwcm9ncmVzcycsXG4gICAgJ3Byb2dyZXNzLWRhcmsnOiBhbmltYXRpb24gPT09ICdwcm9ncmVzcy1kYXJrJyxcbiAgICBwdWxzZTogYW5pbWF0aW9uID09PSAncHVsc2UnXG4gIH1cIlxuICBbbmdTdHlsZV09XCJ0aGVtZVwiXG4+XG4gIDxuZy1jb250ZW50ICpuZ0lmPVwiYXBwZWFyYW5jZSAgPT09ICdjdXN0b20tY29udGVudCdcIj48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbiJdfQ==